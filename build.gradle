buildscript {


    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {

    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "eng1team3game"
        gdxVersion = '1.11.0'
        roboVMVersion = '2.3.16'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }
}

project(":desktop") {
    apply plugin: "java-library"


    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

project(":core") {
    apply plugin: "java-library"


    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-ai:$aiVersion"
    }
}

project(":tests") {
    apply plugin: "java"
    sourceSets.test.java.srcDirs = ["src/"]
    dependencies {
    /**
    * If you do have some classes to test in os specific code you may want to uncomment
    * some of these lines.
    *
    * BUT: I recommend to create seperate test sub projects for each platform. Trust me :)
    *
    */
    // compile project(":android")
    // compile project(":html")
    // compile project(":desktop")
    // if(System.getProperty("os.name").toLowerCase().indexOf("mac") >= 0) {
    // compile project(":ios")
    // }
    // compile project(":core")
    // compile "junit:junit:4.+"
    // compile "org.mockito:mockito-all:1.9.+"
    // compile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
    // compile "com.badlogicgames.gdx:gdx:$gdxVersion"
    // testCompile 'junit:junit:4.+'
    // testCompile "org.mockito:mockito-all:1.9.+"
    // testCompile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
    // testCompile "com.badlogicgames.gdx:gdx:$gdxVersion"
    // testCompile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

    implementation project(":core")

        implementation "junit:junit:4.13.1"
        implementation "org.mockito:mockito-core:3.5.13"

        implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"

        testImplementation 'junit:junit:4.13.1'
        testImplementation 'org.mockito:mockito-core:3.5.13'

        testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}
